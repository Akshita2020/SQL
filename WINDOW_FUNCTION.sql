/*  WINDOW FUNCTION 
WINDOW FUNCTION IS APPLIED, RANKING AND ANAYLTICAL FUNCTIONS OVER A PARTICULAR WINDOW (SET OF ROWS)
AND OVER CLAUSE IS USED with WINDOW FUNCTION TO DEFINE THAT WINDOW 

TYPES OF WINDOW FUNCTIONS -- >

-- AGGREGATE FUNCTION
SUM, AVG, COUNT, MIN, MAX 

-- RANKING 
ROW_NUMBER, RANK, DENSE_RANK, PERCENT_RANK 

-- VALUE/ ANALTIC
LEAD, LAG, FIRST_VALUE, LAST_VALUE 
    */
    
    
USE SIMPLELEARN;

CREATE TABLE WINDOW_FUNCTION (
    NEW_ID INT,
    CATEGORY_NAME VARCHAR(50),
    TOTAL INT,
    AVERAGE FLOAT,
    COUNT INT,
    MIN INT,
    MAX INT
);

INSERT INTO WINDOW_FUNCTION (NEW_ID, CATEGORY_NAME, TOTAL, AVERAGE, COUNT, MIN, MAX) VALUES
(1, 'AGNI', 100, 25.5, 4, 10, 50),
(2, 'AGNI', 150, 30.0, 5, 15, 60),
(3, 'DHARTI', 200, 40.0, 5, 20, 80),
(4, 'DAHRTI', 300, 60.0, 5, 30, 90),
(5, 'VAYU', 250, 50.0, 5, 25, 75),
(6, 'VAYU', 180, 45.0, 4, 20, 70),
(7, 'Category C', 220, 44.0, 5, 22, 66),
(8, 'Category B', 270, 54.0, 5, 27, 81),
(9, 'Category A', 240, 60.0, 4, 30, 90),
(10, 'Category C', 320, 64.0, 5, 32, 96),
(11, 'Category B', 310, 62.0, 5, 31, 93),
(12, 'Category A', 280, 70.0, 4, 35, 105),
(13, 'Category C', 350, 70.0, 5, 35, 105),
(14, 'Category B', 380, 76.0, 5, 38, 114),
(15, 'Category A', 320, 80.0, 4, 40, 120);

SELECT NEW_ID, CATEGORY_NAME,
SUM(NEW_ID) OVER(PARTITION BY CATEGORY_NAME ORDER BY NEW_ID) AS 'TOTAL',
avg(NEW_ID) OVER(PARTITION BY CATEGORY_NAME ORDER BY NEW_ID) AS 'AVERAGE',
COUNT(NEW_ID) OVER(PARTITION BY CATEGORY_NAME ORDER BY NEW_ID) AS 'COUNT',
MIN(NEW_ID) OVER(PARTITION BY CATEGORY_NAME ORDER BY NEW_ID) AS 'AVERAGE',
MAX(NEW_ID) OVER(PARTITION BY CATEGORY_NAME ORDER BY NEW_ID) AS 'AVERAGE'
FROM WINDOW_FUNCTION; 

COMMIT;



