use simplelearn;
create table simplelearn.employee (
id int not null,
name varchar(50),
age int,
city varchar(25),
salary decimal(7,2) );

INSERT INTO simplelearn.employee (id, name, age, city, salary) VALUES
(1, 'John Doe', 30, 'New York', 50000.00),
(2, 'Jane Smith', 28, 'Los Angeles', 55000.00),
(3, 'Michael Johnson', 35, 'Chicago', 60000.00),
(4, 'Emily Davis', 32, 'Houston', 52000.00),
(5, 'William Brown', 27, 'Phoenix', 48000.00),
(6, 'Emma Wilson', 29, 'Philadelphia', 53000.00),
(7, 'Daniel Taylor', 33, 'San Antonio', 58000.00),
(8, 'Olivia Martinez', 31, 'San Diego', 56000.00),
(9, 'Matthew Anderson', 34, 'Dallas', 59000.00),
(10, 'Ava Garcia', 26, 'San Jose', 51000.00),
(11, 'Noah Hernandez', 30, 'Austin', 54000.00),
(12, 'Sophia Lopez', 28, 'Jacksonville', 55000.00),
(13, 'Liam Gonzalez', 29, 'Fort Worth', 52000.00),
(14, 'Isabella Perez', 31, 'Columbus', 57000.00),
(15, 'Mason Wilson', 32, 'Charlotte', 58000.00),
(16, 'Ella Moore', 27, 'San Francisco', 49000.00),
(17, 'Jacob Lee', 33, 'Indianapolis', 60000.00),
(18, 'Avery King', 35, 'Seattle', 61000.00),
(19, 'Sofia Wright', 28, 'Denver', 54000.00),
(20, 'Ethan Hill', 29, 'Washington', 55000.00);
select*from employee;

-- ARTHMATIC OPERATORS (TO PERFORM BASIC MATHMATICAL FUNCTION)

-- ADDITTION OPERATOR 
SELECT ID , NAME, AGE, CITY, SALARY, SALARY+10000 AS EMP_NEWSALARY FROM EMPLOYEE;

-- SUBTRACTION OPERATOR 
SELECT ID, NAME, AGE, SALARY, SALARY-10000 AS EMP_NEWSALARY FROM EMPLOYEE;

-- MULTIPLICATION OPERATOR 
SELECT ID, NAME, AGE,SALARY, SALARY*2 AS EMP_NEWSALRY FROM EMPLOYEE;

-- DIVISION OPERATOR 
SELECT ID, NAME, AGE, SALARY, SALARY/2 AS EMP_NEWSALARY FROM EMPLOYEE;

--  COMPARISON OPERATORS(IT COMPARES TWO DIFFRENT DATA AND SHOWS WHTHER IT IS EQUAL, LESS OR GREATER)

-- EQUAL TO (IT SHOWS ONLY THAT DATA WHICH MATCHES THE SPECIFIC QUERY)
SELECT ID,NAME,AGE, CITY, SALARY FROM EMPLOYEE WHERE SALARY = 50000 ;
SELECT ID, NAME, AGE, SALARY FROM EMPLOYEE WHERE AGE= 30;

-- NOT EQUAL TO 
SELECT*FROM EMPLOYEE WHERE AGE!= 30;
SELECT*FROM EMPLOYEE WHERE CITY != 'CHICAGO';
SELECT*FROM EMPLOYEE WHERE SALARY != 50000;

-- LESS THAN OPERATOR (SHOWS THE DATA WHICH IS LESS THAN VALUE OF RIGHT HAND OPERAND)
SELECT*FROM EMPLOYEE WHERE SALARY < 50000;
SELECT*FROM EMPLOYEE WHERE AGE < 30;
SELECT*FROM EMPLOYEE WHERE ID <5;

-- GREATER THAN OPERATOR (SHOWS THE DATA WHICH IS GREATER THAN VALUE OF RIGHT HAND OPERAND)
SELECT*FROM EMPLOYEE WHERE SALARY > 50000;
SELECT*FROM EMPLOYEE WHERE AGE > 30;
SELECT*FROM EMPLOYEE WHERE ID > 5;

-- LESS THAN AND EQUAL TO OPERATOR (SHOWS THE DATA WHICH IS LESS THAN AND EQUAL TO VALUE OF RIGHT HAND OPERAND)
SELECT*FROM EMPLOYEE WHERE SALARY <= 50000;
SELECT*FROM EMPLOYEE WHERE AGE <= 30;
SELECT*FROM EMPLOYEE WHERE ID <= 5;

-- GREATER THAN AND EQUAL TO OPERATOR  (SHOWS THE DATA WHICH IS GREATER THAN AND EQUAL TO VALUE OF RIGHT HAND OPERAND)
SELECT*FROM EMPLOYEE WHERE SALARY >= 50000;
SELECT*FROM EMPLOYEE WHERE AGE >= 35;
SELECT*FROM EMPLOYEE WHERE ID >= 5;

-- LOGICAL OPERATOR (IT PERFORMS BOOLEAN OPERATION WHICH GIVES ONLY TWO RESULTS EITHER TRUE OR FALSE)

-- AND OPERATOR ( WHEN ALL THE GIVEN CONDITIONS ARE TRUE)
SELECT*FROM EMPLOYEE WHERE SALARY = 50000 AND AGE = 30;
SELECT*FROM EMPLOYEE WHERE AGE <= 30 AND CITY ='NEW YORK';
SELECT*FROM EMPLOYEE WHERE ID = 1 AND NAME ='JOHN DOE';

-- OR OPERATOR ( WHEN ANY OF THE CONDITION IS TRUE )
SELECT*FROM EMPLOYEE WHERE SALARY = 50000 AND AGE = 30;
SELECT*FROM EMPLOYEE WHERE AGE <= 30 AND CITY ='NEW YORK';
SELECT*FROM EMPLOYEE WHERE ID = 1 AND NAME ='JOHN DOE';

-- NOT OPERATOR (OPOSITE OF THE CONDITIONN WHICH HAS BEEN STATED)
SELECT*FROM EMPLOYEE WHERE NOT SALARY = 50000 AND AGE = 30;
SELECT*FROM EMPLOYEE WHERE NOT AGE >= 40 AND SALARY = 50000;
SELECT*FROM EMPLOYEE WHERE NOT ID = 1;

-- BETWEEN OPERATOR (IN BETWEEN A RANGE )
SELECT*FROM EMPLOYEE WHERE SALARY BETWEEN 50000 AND 60000;
SELECT*FROM EMPLOYEE WHERE AGE BETWEEN 30 AND 35;
SELECT*FROM EMPLOYEE WHERE ID BETWEEN 1 AND 10;
COMMIT;
