 USE SIMPLELEARN;
 
 -- WHAT IS SQL CLUASES ?
 /* (CLUASES ARE INBUILT FUNCTIONS THAT USE CERTAIN CONDITIONAL EXPERRSSION WHICH HELPTO ACCESS PARTICULAR A SET OF RECORD)
 -- REDUCES THE COMPLEXITY OF THE QUERY
 -- FILTER AND ANYALZE DATA QUICKLY 
 
 TYPES OF CLUASES 
 BASIC CLUASE ( USES A CONDITION )
 ORDER BY( SORT THE DATA AND TABLE IN ASSCENDING AND DESCINDING ORDER)
 GROUP BY (USED FOR ORGAINSING SIMILAR DATA INTO GROUP ) 
 */
 
 -- WHERE CLAUSE 
 SELECT*FROM EMPLOYEE WHERE CITY ='INDORE';
 SELECT*FROM EMPLOYEE WHERE SALARY > 60000;
 SELECT*FROM EMPLOYEE WHERE SALARY < 30000;
 SELECT*FROM EMPLOYEE WHERE SALARY  BETWEEN 30000 AND 50000;
 
 -- UPDATE CLAUSE 
 UPDATE EMPLOYEE SET SALARY = 80000 WHERE ID =1;
 SELECT*FROM EMPLOYEE;
 
 -- AND CLAUSE (WHEN BOTH CONDITIONS ARE MET)
  SELECT*FROM EMPLOYEE WHERE SALARY > 30000 AND AGE > 30;
  
  -- OR CLAUSE ( WHEN ANY OF THE CONDITION IS TRUE)
SELECT*FROM EMPLOYEE WHERE SALARY > 30000 AND CITY = 'COLUMBUS';

-- LIMIT CLAUSE ( WHEN U WANT TO ACCESS LIMITED RECORDS)
SELECT*FROM EMPLOYEE LIMIT 5;

-- AS CLUASE (RENAME A COLUMN TEMPORAILY IN A GIVEN TABLE, INCREASE READIBILITY AND UNDERSTABILITY)
SELECT SALARY AS TOTAL_SALARY FROM EMPLOYEE;

-- LIKE CLUASE (USED TO FETCH MATCHING ROWS AND VALUES THAT STASIFY WILDCARD(%,UNDERSCORE-) OPERATOR)
SELECT*FROM EMPLOYEE WHERE NAME LIKE 'A%'; -- (WHOSE NAME STARTS WITH A)
SELECT 
    *
FROM
    EMPLOYEE
WHERE
    NAME LIKE '%A'; -- (WHOSE NAME ENDS WITH A)

-- WHAT IS ORDER BY?
/* IT IS USED TO SORT THE RECORDS IN THE DATABSE TABLES. IT CAN BE ARRANGED IN ASCENDING AND DESCENDING ORDER
HELPS TO REORDER DATA */

-- ASCENDING AND DESCENDING ORDER
 SELECT*FROM EMPLOYEE ORDER BY SALARY;     -- BY DEFAULT IN ASCENDING ORDER
 SELECT*FROM EMPLOYEE ORDER BY NAME ASC ;      -- IN ASCENDING ORDER
  SELECT*FROM EMPLOYEE WHERE AGE > 26 ORDER BY NAME ASC ;     -- IN ASCENDING ORDER
  
    SELECT*FROM EMPLOYEE ORDER BY NAME DESC ;     -- IN DESCENDING ORDER (HIHGEST TO LOWEST)
    SELECT*FROM EMPLOYEE WHERE ID > 6 ORDER BY NAME DESC ;    -- IN DESCENDING ORDER

-- ORDER BY WITH LIMIT AND RANDOM
SELECT*FROM EMPLOYEE ORDER BY rand(); 
SELECT*FROM EMPLOYEE ORDER BY SALARY DESC LIMIT 5; 

-- ORDER BY MULTIPLE SATATEMENT (IT IS USED TO SORT/REARRANGED FOR MULTIPLE ROWS IN ASCENDING AND DESC )
SELECT*FROM EMPLOYEE ORDER BY NAME ASC, SALARY DESC;
SELECT*FROM EMPLOYEE;

--  SQL INSERT STATMENT FOR ALL COULMN
INSERT INTO EMPLOYEES (ID, NAME, AGE, CITY, SALARY) VALUES (1, 'RAM', 24, 'INDORE', 25000.34);

--  SQL INSERT STATMENT FOR PARTICULAR COULMN
INSERT INTO EMPLOYEES (ID, NAME, CITY, SALARY) VALUES (2, 'SHYAM', 'BHOPAL', 30000.34);

-- INSERT MULRIPLE VALUES
INSERT INTO EMPLOYEES VALUES (3, 'MOHAN',23, 'DELHI', 26000.45),
(4, 'ROHAN',26, 'MUMBAI', 45000.79);
SELECT*FROM EMPLOYEES;

-- SQL DELETE STATEMENT
-- (DELETE THE EXISITNGS RECORDS IN THE TABLE DEPENDING ON HOW MANY ROWS STAISFY THE CONDTION THAT IS SPECIFIED IN THE WHERE CLAUSE)
DELETE FROM EMPLOYEES WHERE ID = 4;
DELETE FROM EMPLOYEES WHERE AGE = 23;
DELETE FROM EMPLOYEES WHERE NAME = 'SHYAM';
DELETE FROM EMPLOYEES;
DELETE FROM EMPLOYEES WHERE ID = 4 AND NAME ='ROHAN';
DELETE FROM EMPLOYEES WHERE ID = 3 OR AGE = 23;
DELETE FROM EMPLOYEES WHERE SALARY between 25000 AND 27000;

-- ALTER TABLE 
ALTER TABLE EMPLOYEE ADD COLUMN AADHARNO VARCHAR(15) NOT NULL;
ALTER TABLE EMPLOYEE ADD COLUMN (PAN_NO VARCHAR(20) NOT NULL, UAN_NO VARCHAR(10));

-- UPDATE COLUMN NAME
ALTER TABLE EMPLOYEE CHANGE COLUMN SALARY TOTAL_SALARY DECIMAL(8,2);
ALTER TABLE EMPLOYEE MODIFY COLUMN AGE INT;
ALTER TABLE EMPLOYEE ADD COLUMN BONUS VARCHAR(20) ;
ALTER TABLE EMPLOYEE ALTER COLUMN BONUS SET DEFAULT 50000;

-- DROP COLUMN 
ALTER TABLE EMPLOYEE DROP COLUMN AADHARNO;
ALTER TABLE EMPLOYEE DROP COLUMN BONUS, DROP COLUMN PAN_NO, DROP COLUMN UAN_NO;
SELECT*FROM EMPLOYEE;

 COMMIT;
 