/* 
SQL JOIN PRACTICE : 
(REFER TO CUSTOMER, ORDERS AND SHIPPINGS TABLE)  */

USE VOLCANUS;
SELECT*FROM CUSTMORES;
SELECT*FROM ORDERS;
SELECT*FROM SHIPPINGS;


--  RETERIVE THE FIRST NAMES OF CUSTOMERS ALONG WITH THE ITEMS NAMES THEY HAVE ORDERED
SELECT 
CUSTMORES.FIRST_NAME AS CUSTOMERS_FIRST_NAME,
ORDERS.ITEM AS ORDERD_ITEM,
ORDERS.AMOUNT
FROM CUSTMORES
INNER JOIN ORDERS
ON CUSTMORES.CUSTOMER_ID = ORDERS.CUSTMOER_ID;

-- LIST ALL CUSTMORES AND THEIR ORDERS INCLUDING THOSE WHO HAVEN'T PLACED ANY ORDER 
SELECT 
CUSTMORES.FIRST_NAME AS CUSTOMERS_FIRST_NAME,
ORDERS.ITEM AS ORDERD_ITEM,
ORDERS.AMOUNT
FROM CUSTMORES
LEFT JOIN ORDERS
ON CUSTMORES.CUSTOMER_ID = ORDERS.CUSTMOER_ID;

-- Display all orders and their corresponding customer names, including both customers without orders and orders without customers
SELECT
CUSTMORES.FIRST_NAME AS CUSTOMERS_FIRST_NAME,
ORDERS.ITEM AS ORDERD_ITEM,
ORDERS.AMOUNT
FROM CUSTMORES
LEFT JOIN ORDERS
ON CUSTMORES.CUSTOMER_ID = ORDERS.CUSTMOER_ID
UNION 
SELECT
CUSTMORES.FIRST_NAME AS CUSTOMERS_FIRST_NAME,
ORDERS.ITEM AS ORDERD_ITEM,
ORDERS.AMOUNT
FROM ORDERS
RIGHT JOIN CUSTMORES
ON CUSTMORES.CUSTOMER_ID = ORDERS.CUSTMOER_ID;

-- Display all orders and their corresponding customer names, including both customers without orders and orders without customers

SELECT
CUSTMORES.FIRST_NAME AS CUSTOMERS_FIRST_NAME,
ORDERS.ITEM AS ORDERD_ITEM,
ORDERS.AMOUNT
FROM CUSTMORES
LEFT JOIN ORDERS
ON CUSTMORES.CUSTOMER_ID = ORDERS.CUSTMOER_ID
UNION 
SELECT
CUSTMORES.FIRST_NAME AS CUSTOMERS_FIRST_NAME,
ORDERS.ITEM AS ORDERD_ITEM,
ORDERS.AMOUNT
FROM ORDERS
RIGHT JOIN CUSTMORES
ON CUSTMORES.CUSTOMER_ID = ORDERS.CUSTMOER_ID;


-- RETERIVE A LIST OF ALL CUSTOMERS AND THEIR ORDERS INCLUDE BOTH CUSTOMERS WITHOUT ORDERS AND ORDERS WITHOUT CUSTOMERS
SELECT
CUSTMORES.FIRST_NAME AS CUSTOMERS_FIRST_NAME,
ORDERS.ITEM AS ORDERD_ITEM,
ORDERS.AMOUNT
FROM CUSTMORES
LEFT JOIN ORDERS
ON CUSTMORES.CUSTOMER_ID = ORDERS.CUSTMOER_ID
UNION 
SELECT
CUSTMORES.FIRST_NAME AS CUSTOMERS_FIRST_NAME,
ORDERS.ITEM AS ORDERD_ITEM,
ORDERS.AMOUNT
FROM ORDERS
LEFT JOIN CUSTMORES
ON CUSTMORES.CUSTOMER_ID = ORDERS.CUSTMOER_ID
WHERE CUSTMORES.CUSTOMER_ID IS NULL; 

-- LIST CUSTOMERS WHO HAVEN'T PLACED ANY ORDER 
SELECT 
CUSTMORES.FIRST_NAME AS CUSTOMERS_FIRST_NAME,
ORDERS.ITEM AS ORDERD_ITEM,
ORDERS.AMOUNT
FROM CUSTMORES
LEFT JOIN ORDERS
ON CUSTMORES.CUSTOMER_ID = ORDERS.CUSTMOER_ID 
WHERE ORDERS.ITEM IS NULL;

-- DISPLAY ORDERS WITHOUT ASSOCIATED CUSTOMERS 
SELECT*
FROM orders
LEFT JOIN custmores ON orders.custmoer_id = custmores.customer_id
WHERE custmores.customer_id IS NULL;

-- FIND PAIRS OF CUSTOMERS FROM THE SAME COUNTRY
SELECT DISTINCT c1.FIRST_NAME AS CUSTOMER1_FIRST_NAME,
                c2.FIRST_NAME AS CUSTOMER2_FIRST_NAME,
                c1.COUNTRY
FROM CUSTMORES c1
INNER JOIN CUSTMORES c2 
ON c1.COUNTRY = c2.COUNTRY AND c1.CUSTOMER_ID < c2.CUSTOMER_ID;

-- GENRATE ALL POSSIBLE COMBINATIONS OF PRODUCTS(ITEMS) AND CUSTOMERS.
SELECT*FROM CUSTMORES;
SELECT*FROM ORDERS;
SELECT DISTINCT C.FIRST_NAME AS FIRST_NAME, C.COUNTRY, O.ITEM, O.AMOUNT, C.CUSTOMER_ID
FROM CUSTMORES C
CROSS JOIN ORDERS O 
ON C.CUSTOMER_ID = O.CUSTMOER_ID;

-- RETERIVE THE ITEM NAMES AND SHIPPING STATUS FOR ORDERS WITH SHIPPING INFORMATION
SELECT*FROM ORDERS;
SELECT*FROM SHIPPINGS;

SELECT DISTINCT O.ITEM, S.STATUSS
FROM ORDERS O
INNER JOIN SHIPPINGS S
ON O.CUSTMOER_ID = S.CUSTOMER;

-- LIST ALL ORDERS AND THEIR SHIPPING STATUSS, INCLUDING ORDERS WITHOUT STATUS SHIPPING INFORMATION
SELECT*FROM ORDERS;
SELECT*FROM SHIPPINGS;

SELECT O.ITEM, O.AMOUNT, S.STATUSS,  O.CUSTMOER_ID
FROM ORDERS O 
LEFT JOIN SHIPPINGS S
ON O.CUSTMOER_ID = S.CUSTOMER;

-- DISPLAY ALL SHIPPING RECORDS AND THEIR CORRSEPONDING ORDER ITEMS, INCLUDING RECORDS WITHOUT ASSOCIATED ORDERS
SELECT*FROM ORDERS;
SELECT*FROM SHIPPINGS;

SELECT *
FROM SHIPPINGS S
LEFT JOIN ORDERS O
ON S.CUSTOMER = O.CUSTMOER_ID;

-- RETERIVE A LIST OF ALL ORDERS AND THEIR SHIPPING STATUS INCLUDING 
-- BOTH ORDERS WITHOUT SHIPPING INFORMATION AND SHIPPING RECORDS WITHOUT ASSOCIATED ORDERS 

SELECT O.ITEM, O.AMOUNT, O.COUNTRY, S.STATUSS
FROM ORDERS O 
LEFT JOIN SHIPPINGS S 
ON S.CUSTOMER = O.CUSTMOER_ID
UNION 
SELECT O.ITEM, O.AMOUNT, O.COUNTRY, S.STATUSS
FROM ORDERS O 
RIGHT JOIN SHIPPINGS S 
ON S.CUSTOMER = O.CUSTMOER_ID;

-- LIST ORDERS WITHOUT SHIPPING INFORMATION 
SELECT*FROM ORDERS;
SELECT*FROM SHIPPINGS;

 SELECT *
 FROM ORDERS O
 LEFT JOIN SHIPPINGS S
 ON  S.CUSTOMER = O.CUSTMOER_ID WHERE O.CUSTMOER_ID IS NULL;
 
 -- DISPLAY SHIPPING RECORDS WITHOUT ASSOCIATED ORDERS
 SELECT *
 FROM ORDERS O
 RIGHT JOIN SHIPPINGS S
 ON  S.CUSTOMER = O.CUSTMOER_ID WHERE O.CUSTMOER_ID IS NULL;
 
 -- FIND PAIRS OF ORDERS WITH THE SAME  ITEM  AND AMOUNT
 SELECT *
 FROM ORDERS;
 SELECT DISTINCT o1.Order_ID AS Order_ID1, o2.Order_ID AS Order_ID2, o1.Item, o1.Amount
FROM Orders o1
JOIN Orders o2 ON o1.Item = o2.Item AND o1.Amount = o2.Amount AND o1.Order_ID < o2.Order_ID;

-- GENRATE ALL POSSIBLE COMBINATIONS OF ORDERS AND SHIPPING RECORDS 
SELECT DISTINCT O.Order_ID, S.Shipping_ID, O.ITEM, O.AMOUNT
FROM ORDERS O
CROSS JOIN SHIPPINGS S 
ON O.CUSTMOER_ID = S.CUSTOMER;

  COMMIT;