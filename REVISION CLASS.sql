CREATE DATABASE D;
CREATE DATABASE IF NOT EXISTS D;
USE  D;

-- DROP database D;
-- SINGLE LINE COMMENT 
/*
 I AM MULTILINE
 COMMENT 
*/

CREATE TABLE STUDENT(
ROLL_NO TINYINT PRIMARY KEY auto_increment,
NAME VARCHAR(20) NOT NULL,
DOB DATE,
AGE TINYINT,
GENDER ENUM('M','F'),
CITY VARCHAR(20),
STATE VARCHAR(20),
COUNTRY VARCHAR(20) DEFAULT 'INDIA',
COURSE VARCHAR (20),
MARKS INT,
RATINGTEXT VARCHAR(20) UNIQUE,
FEEDBACK TEXT 
);

SELECT * FROM STUDENT;

/* INSERT INTO STUDENT ( ROLL_NO, NAME, DOB, AGE, GENDER, CITY, STATE, COUNTRY, COURSE, MARKS, FEEDBACK) 
VALUES
(1, 'AKSHITA', '2000-11-26', NULL, 'FEMALE', 'INDORE', 'M.P', 'INDIA','DS', 99, 'XYZ');
0	10	15:54:57	INSERT INTO STUDENT ( ROLL_NO, NAME, DOB, AGE, GENDER, CITY, STATE, COUNTRY, COURSE, MARKS, FEEDBACK) 
 VALUES
 ERROR - (1, 'AKSHITA', '2000-11-26', NULL, 'FEMALE', 'INDORE', 'M.P', 'INDIA','DS', 99, 'XYZ')	Error Code: 1265. Data truncated for column 'GENDER' at row 1	0.015 sec
   ERROR BECUSE OF ENUM 
   */
 
 INSERT INTO STUDENT (NAME, DOB, AGE, GENDER, CITY, STATE, COURSE, MARKS, RATINGTEXT, FEEDBACK) 
VALUES
( 'AKSHITA', '2000-11-26', NULL, 'F', 'INDORE', 'M.P', 'DS', 99, 'EXCELLENT', 'XYZ'),
('MUSKAN', '2001-07-20', NULL, 'F', 'BHOPAL', 'M.P', 'DA', 89, 'VERY GOOD', 'XYZ'),
( 'ISHIKA', '1998-01-11', NULL, 'F', 'JAIPUR', 'RAJASTHAN', 'MERN', 79, 'GOOD', 'XYZ'),
( 'PARUL', '1997-10-22', NULL, 'F', 'BHIND', 'M.P', 'DA', 69, 'NOT BAD', 'XYZ'),
( 'KOMAL', '2002-09-25', NULL, 'F', 'PUNE', 'M.P', 'DA', 69, 'OKAY', 'XYZ'),
( 'SHEETAL', '2003-10-20', NULL, 'F', 'GWALIOR', 'M.P', 'DA', 69, 'IMPROVEMENT', 'XYZ'),
( 'PRIYA', '2000-10-20', NULL, 'F', 'BHIND', 'M.P', 'DA', 69, 'OAKY OKAY ', 'XYZ');

SELECT * FROM STUDENT;
SELECT NAME, MARKS FROM STUDENT;
DROP TABLE STUDENT;
TRUNCATE TABLE STUDENT;

DELETE FROM STUDENT WHERE ROLL_NO = 4;
SHOW databases;
DESC STUDENT;

-- WHERE CLAUSE 
SELECT * FROM STUDENT WHERE MARKS > 70;
SELECT * FROM STUDENT WHERE CITY = 'INDORE';
SELECT * FROM STUDENT WHERE MARKS = 100;
SELECT * FROM STUDENT WHERE NAME = 'AKSHITA';
SELECT * FROM STUDENT WHERE MARKS != 69; -- NOT EQUAL TO 
SELECT * FROM STUDENT WHERE MARKS <> 79; -- NOT EQUAL TO 

-- LIKE 
SELECT * FROM STUDENT WHERE NAME LIKE 'S%'; -- FIRST CHARATER 
SELECT * FROM STUDENT WHERE NAME LIKE '%A'; -- FROM LAST
SELECT * FROM STUDENT WHERE NAME LIKE '_K%'; -- SECOND CHARATER 

-- AGGREGATE FUNCTION 
SELECT AVG(MARKS) FROM STUDENT;
SELECT MAX(MARKS) FROM STUDENT;
SELECT MIN(MARKS) FROM STUDENT;
SELECT SUM(MARKS) FROM STUDENT;
SELECT COUNT(MARKS) FROM STUDENT;

-- LIMIT 
SELECT * FROM STUDENT LIMIT 3;
SELECT * FROM STUDENT;
SELECT * FROM STUDENT LIMIT 1,1;  -- IT WILL SKIP THE 1ST ROW AND RETURN 1 ROW
SELECT * FROM STUDENT LIMIT 1,2;  

-- ORDER BY 
SELECT * FROM STUDENT ORDER BY MARKS; -- BY DEFAULT ASCENDING ORDER 
SELECT * FROM STUDENT ORDER BY MARKS DESC;

-- GROUP BY 

SELECT COURSE, MAX(MARKS) AS MAXIMUM_MARKS FROM STUDENT GROUP BY COURSE HAVING MAX(MARKS) > 70;

-- HAVING 
SELECT COURSE, COUNT(COURSE) FROM STUDENT GROUP BY COURSE;
SELECT COURSE, MAX(MARKS) AS MAXIMUM_MARKS FROM STUDENT GROUP BY COURSE;


-- JOINS

CREATE TABLE STUDENTS(
ROLL_NO TINYINT PRIMARY KEY auto_increment,
NAME VARCHAR(20) NOT NULL,
COURSEID INT 
);

CREATE TABLE STUDENT_DETAILS (
ROLL_NO TINYINT,
DOB DATE,
AGE TINYINT,
GENDER ENUM('M','F'),
CITY VARCHAR(20),
STATE VARCHAR(20),
COUNTRY VARCHAR(20) DEFAULT 'INDIA'
);

CREATE TABLE COURSES (
COURSEID INT PRIMARY KEY,
COURSE VARCHAR(20),
FEE INT 
);

INSERT INTO STUDENTS (ROLL_NO,
NAME,
COURSEID) VALUES( 1, 'AKSHITA',5),
				( 2, 'MUSKAN',3)
				( 3, 'ISHIKA',6)
				( 4, 'PARUL',7)
				( 5, 'SHEETAL',8)
                ( 6, 'KOMAL',1)
                ( 7, 'PRIYA',3)
                ( 8, 'NIHKIL',9)
                ( 9, 'JAYWANT',5)








